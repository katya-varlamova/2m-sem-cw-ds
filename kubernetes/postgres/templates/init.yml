apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Chart.Name }}-init"
  namespace: {{ .Values.namespace }}
data:
  init.sql: |
    CREATE DATABASE tickets;
    GRANT ALL PRIVILEGES ON DATABASE tickets TO {{ .Values.pg.default.username }};

    CREATE DATABASE flights;
    GRANT ALL PRIVILEGES ON DATABASE flights TO {{ .Values.pg.default.username }};

    CREATE DATABASE privileges;
    GRANT ALL PRIVILEGES ON DATABASE privileges TO {{ .Values.pg.default.username }};

    CREATE DATABASE persons;
    GRANT ALL PRIVILEGES ON DATABASE persons TO {{ .Values.pg.default.username }};

    CREATE DATABASE statistics;
    GRANT ALL PRIVILEGES ON DATABASE statistics TO {{ .Values.pg.default.username }};

    \c tickets

    CREATE TABLE ticket
    (
        id            SERIAL PRIMARY KEY,
        ticket_uid    uuid UNIQUE NOT NULL,
        username      VARCHAR(80) NOT NULL,
        flight_number VARCHAR(20) NOT NULL,
        price         INT         NOT NULL,
        status        VARCHAR(20) NOT NULL
            CHECK (status IN ('PAID', 'CANCELED'))
    );

    \c flights

    CREATE TABLE airport
    (
        id      SERIAL PRIMARY KEY,
        name    VARCHAR(255),
        city    VARCHAR(255),
        country VARCHAR(255)
    );

    CREATE TABLE flight
    (
        id              SERIAL PRIMARY KEY,
        flight_number   VARCHAR(20)              NOT NULL,
        datetime        TIMESTAMP WITH TIME ZONE NOT NULL,
        from_airport_id INT REFERENCES airport (id),
        to_airport_id   INT REFERENCES airport (id),
        price           INT                      NOT NULL
    );


    \c privileges
    CREATE TABLE privilege
    (
        id       SERIAL PRIMARY KEY,
        username VARCHAR(80) NOT NULL UNIQUE,
        status   VARCHAR(80) NOT NULL DEFAULT 'BRONZE'
            CHECK (status IN ('BRONZE', 'SILVER', 'GOLD')),
        balance  INT
    );

    CREATE TABLE privilege_history
    (
        id             SERIAL PRIMARY KEY,
        privilege_id   INT REFERENCES privilege (id),
        ticket_uid     uuid        NOT NULL,
        datetime       TIMESTAMP   NOT NULL,
        balance_diff   INT         NOT NULL,
        operation_type VARCHAR(20) NOT NULL
            CHECK (operation_type IN ('FILL_IN_BALANCE', 'DEBIT_THE_ACCOUNT'))
    );

    \c persons

    create table if not exists Person (
        login varchar(80) primary key,
        name varchar(50),
        email varchar(50),
        mobilePhone varchar(50),
        lastName varchar(50),
        password varchar(50),
        role varchar(50)
        );

    create table if not exists Client (
        client_id serial primary key,
        client_secret varchar(50)
    );

    create table if not exists AuthCode (
        code serial primary key,
        client_id   INT REFERENCES Client (client_id),
        login varchar(50),
        scope_string varchar(200)
    );

    \c statistics
    CREATE TABLE statistic
    (
        id              SERIAL PRIMARY KEY,
        username   VARCHAR(250),
        path       VARCHAR(250),
        method     VARCHAR(250),
        startedat numeric,
        finishedat   numeric,
        duration   numeric,
        responsecode           INT
    );

    \c tickets
    INSERT INTO ticket (ticket_uid ,username, flight_number, price, status) VALUES
    ('049161bb-badd-4fa8-9d90-87c9a82b0668', 'Kate', 'AFL031', 1500, 'PAID');

    \c flights
    INSERT INTO airport (name, city, country) VALUES
    ('Шереметьево', 'Москва', 'Россия');
    INSERT INTO airport (name, city, country) VALUES
    ('Пулково', 'Санкт-Петербург', 'Россия');
    INSERT INTO flight (flight_number, datetime, from_airport_id, to_airport_id, price) VALUES
    ('AFL031', '2021-10-08 20:00', 2, 1, 1500);


    \c privileges
    INSERT INTO privilege (username, status, balance) VALUES
    ('Kate', 'GOLD', 1500);
    INSERT INTO privilege_history (privilege_id, ticket_uid, datetime, balance_diff, operation_type) VALUES
    (1,
    '049161bb-badd-4fa8-9d90-87c9a82b0668',
    '2021-10-08T19:59:19Z',
    1500,
    'FILL_IN_BALANCE');

    \c persons
    INSERT INTO Person (login, name, email, mobilePhone, lastName, password, role) VALUES
    ('Kate', 'katya', 'katy@mail.ru', '+7 (990) 100-73-02', 'varlamova', 'pass', 'user'),
    ('admin', 'katya', 'katy_admin@mail.ru', '+7 (990) 100-73-02', 'varlamova', 'admin', 'admin');

    INSERT INTO Client (client_secret) VALUES 
    ('secret');


