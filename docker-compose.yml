version: "3"
services:
  frontend:
    image: frontend
    container_name: frontend
    restart: on-failure
    build:
      context: ./
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:3000"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - '31000:31000'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - '31001:31001'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31001

  kafka-broker:
    image: kafka-broker
    container_name: kafka-broker
    restart: on-failure
    build:
      context: src/KafkaConsumer
      dockerfile: Dockerfile
    depends_on:
      - kafka

  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  flight-service:
    image: flight-service
    container_name: flight-service
    restart: on-failure
    build:
      context: src
      dockerfile: FlightService/Dockerfile
    ports:
      - "8060:8060"
    depends_on:
      - postgres

  bonus-service:
    image: bonus-service
    container_name: bonus-service
    restart: on-failure
    build:
      context: src
      dockerfile: BonusService/Dockerfile
    ports:
      - "8050:8050"
    depends_on:
      - postgres

  ticket-service:
    image: ticket-service
    container_name: ticket-service
    restart: on-failure
    build:
      context: src
      dockerfile: TicketService/Dockerfile
    ports:
      - "8070:8070"
    depends_on:
      - postgres

  statistics-service:
    image: statistics-service
    container_name: statistics-service
    restart: on-failure
    build:
      context: src
      dockerfile: StatistcsService/Dockerfile
    ports:
      - "8020:8020"
    depends_on:
      - postgres
      - kafka-broker

  identity-provider-service:
    image: identity-provider-service
    container_name: identity-provider-service
    restart: on-failure
    build:
      context: src
      dockerfile: IdentityProviderService/Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      - postgres

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    restart: on-failure
    build:
      context: src
      dockerfile: GatewayService/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - ticket-service
      - bonus-service
      - flight-service
      - identity-provider-service
      - statistics-service

volumes:
  db-data: