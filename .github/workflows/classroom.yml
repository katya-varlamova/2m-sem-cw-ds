name: GitHub Classroom Workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2
    # - name: Build images
    #   timeout-minutes: 10
    #   run: |
    #     docker-compose build frontend
    #     docker-compose build postgres
    #     docker-compose build api-gateway
    #     docker-compose build flight-service
    #     docker-compose build bonus-service
    #     docker-compose build statistics-service
    #     docker-compose build identity-provider-service
    #     docker-compose build kafka-broker
    #     docker-compose build ticket-service
    #     docker-compose build ticket-service
    # - name: Setup kafka
    #   run: |
    #     docker-compose up -d zookeeper
    #     docker-compose logs zookeeper
    #     docker-compose up -d kafka
    #     docker-compose logs kafka
    # - name: Setup db
    #   run: |
    #     docker-compose up -d postgres
    #     docker-compose logs postgres
    #     sleep 5
    #     cd postgres
    #     chmod +x ./create-test-db.sh  && ./create-test-db.sh
    #     cd ..

    # - name: Run containers
    #   timeout-minutes: 10
    #   run: |
    #     docker-compose up -d identity-provider-service
    #     docker-compose up -d api-gateway

    #     docker-compose logs ticket-service
    #     docker-compose logs flight-service
    #     docker-compose logs bonus-service
    #     docker-compose logs api-gateway
    #     docker-compose logs identity-provider-service
    #     docker-compose logs kafka-broker
    #     docker-compose logs statistics-service
    #     chmod +x ./scripts/wait-script.sh  && ./scripts/wait-script.sh
    #   env:
    #     WAIT_PORTS: 8080,8070,8060,8050,8090,8020
      - name: publish
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
        run: |
          echo $DOCKER_USER
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker-compose build frontend
          docker-compose build kafka
          docker-compose build kafka-broker
          docker-compose build zookeeper
        # docker compose build
        # docker tag api-gateway katyavarlamova/api-gateway
        # docker push katyavarlamova/api-gateway
        # docker tag bonus-service katyavarlamova/bonus-service
        # docker push katyavarlamova/bonus-service
        # docker tag flight-service katyavarlamova/flight-service
        # docker push katyavarlamova/flight-service
        # docker tag ticket-service katyavarlamova/ticket-service
        # docker push katyavarlamova/ticket-service

        # docker tag identity-provider-service katyavarlamova/identity-provider-service
        # docker push katyavarlamova/identity-provider-service
        
        # docker tag statistics-service katyavarlamova/statistics-service
        # docker push katyavarlamova/statistics-service

          docker tag kafka-broker katyavarlamova/kafka-broker
          docker push katyavarlamova/kafka-broker
          
          docker tag frontend katyavarlamova/frontend
          docker push katyavarlamova/frontend

          docker tag confluentinc/cp-zookeeper:7.3.2 katyavarlamova/zookeeper
          docker push katyavarlamova/zookeeper

          docker tag confluentinc/cp-kafka:7.3.2 katyavarlamova/kafka
          docker push katyavarlamova/kafka

      - name: Write out the kubeconfig info
        env:
          MY_SECRET: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$MY_SECRET" | base64 -d >> /tmp/config
          chmod 0600 /tmp/config

      - name: Instal deps
        run: curl -sSL https://hub.mcs.mail.ru/repository/client-keystone-auth/latest/linux/client-install.sh | bash

      - name: Deploy DB
        env:
          KUBECONFIG: /tmp/config
        run: |
          source ~/vk-cloud-solutions/path.bash.inc
          helm upgrade --install postgres ./kubernetes/postgres
      
      - name: Deploy API
        env:
          KUBECONFIG: /tmp/config
        run: |
          source ~/vk-cloud-solutions/path.bash.inc
          helm upgrade --install flights ./kubernetes/flights
          kubectl apply -f ./kubernetes/ingress.yaml
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "185.130.113.206 katyavarlamova.ds.com" | sudo tee -a /etc/hosts
                

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v
